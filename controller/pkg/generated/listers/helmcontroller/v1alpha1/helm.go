// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/thomastaylor312/advanced-helm-demos/controller/pkg/apis/helmcontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HelmLister helps list Helms.
type HelmLister interface {
	// List lists all Helms in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Helm, err error)
	// Helms returns an object that can list and get Helms.
	Helms(namespace string) HelmNamespaceLister
	HelmListerExpansion
}

// helmLister implements the HelmLister interface.
type helmLister struct {
	indexer cache.Indexer
}

// NewHelmLister returns a new HelmLister.
func NewHelmLister(indexer cache.Indexer) HelmLister {
	return &helmLister{indexer: indexer}
}

// List lists all Helms in the indexer.
func (s *helmLister) List(selector labels.Selector) (ret []*v1alpha1.Helm, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Helm))
	})
	return ret, err
}

// Helms returns an object that can list and get Helms.
func (s *helmLister) Helms(namespace string) HelmNamespaceLister {
	return helmNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HelmNamespaceLister helps list and get Helms.
type HelmNamespaceLister interface {
	// List lists all Helms in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Helm, err error)
	// Get retrieves the Helm from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Helm, error)
	HelmNamespaceListerExpansion
}

// helmNamespaceLister implements the HelmNamespaceLister
// interface.
type helmNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Helms in the indexer for a given namespace.
func (s helmNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Helm, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Helm))
	})
	return ret, err
}

// Get retrieves the Helm from the indexer for a given namespace and name.
func (s helmNamespaceLister) Get(name string) (*v1alpha1.Helm, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("helm"), name)
	}
	return obj.(*v1alpha1.Helm), nil
}
